AWSTemplateFormatVersion: 2010-09-09

Description: This template creates an Bastion Instances

Metadata:
  AWS::CloudFormation::Interface: 
    ParameterGroups:
      - 
        Label: 
          default: "Export VPC Stack Name"
        Parameters:
          - ExportVpcStackName
      - 
        Label: 
          default: "EC2 Parameters"
        Parameters:
          - AmazonImageID
          - InstanceType
          - KeyName

Parameters:
  ExportVpcStackName:
    Description: The name of the vpc stack that exports values
    Type: String

  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t3.medium
  
  AmazonImageID:
    Description: The ID of the Amazon machine image (AMI)
    Type: String
    Default: ami-0f540e9f488cfa27d
  
  KeyName:
    Description: Key name for SSH connect
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  
Resources:
# Create Security group for Bastion Instance
  SSHSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Enable SSH access to Bastion Instance
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags: 
        - Key: Name
          Value: SSH Security Group
        - Key: env
          Value: PoC
      VpcId: 
        Fn::ImportValue: !Sub ${ExportVpcStackName}-VPC
  
  AppSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Enable HTTP/HTTPS access to Bastion Instance
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      Tags: 
        - Key: Name
          Value: App Security Group
        - Key: env
          Value: PoC
      VpcId: 
        Fn::ImportValue: !Sub ${ExportVpcStackName}-VPC

# Create Bastion Instance 1
  BastionInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      BlockDeviceMappings:
        - Ebs:
            VolumeSize: 30
            VolumeType: gp2
            DeleteOnTermination: true
          DeviceName: /dev/sda1
      SubnetId:
        Fn::ImportValue: !Sub ${ExportVpcStackName}-PublicSubnet1
      SecurityGroupIds:
        - !Ref SSHSecurityGroup
        - !Ref AppSecurityGroup
      KeyName: !Ref KeyName
      ImageId: !Ref AmazonImageID 
      Tags:
        - Key: Name
          Value: Bastion Instance 1
        - Key: env
          Value: PoC

# Allocate Elastic IP for Instances
  BastionEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: Bastion EIP
        - Key: env
          Value: PoC

# Associate EIP to Instances
  AssociateWebPort:
    Type: AWS::EC2::EIPAssociation
    Properties:
      AllocationId: !GetAtt BastionEIP.AllocationId
      InstanceId: !Ref BastionInstance

# Outputs
Outputs:
  WebServerURL:
    Description: URL of Web Server
    Value: !Sub
      - http://${publicip}:8080/
      - { publicip: !GetAtt BastionInstance.PublicIp }
